[{"/Users/phw/study/nomadcoder/typescript/src/index.tsx":"1","/Users/phw/study/nomadcoder/typescript/src/App.tsx":"2","/Users/phw/study/nomadcoder/typescript/src/Circle.tsx":"3","/Users/phw/study/nomadcoder/typescript/src/theme.ts":"4","/Users/phw/Documents/GitHub/coin-myself/src/index.tsx":"5","/Users/phw/Documents/GitHub/coin-myself/src/theme.ts":"6","/Users/phw/Documents/GitHub/coin-myself/src/App.tsx":"7","/Users/phw/Documents/GitHub/coin-myself/src/routes/Router.tsx":"8","/Users/phw/Documents/GitHub/coin-myself/src/routes/Coin.tsx":"9","/Users/phw/Documents/GitHub/coin-myself/src/routes/Coins.tsx":"10","/Users/phw/Documents/GitHub/coin-myself/src/routes/api.ts":"11","/Users/phw/Documents/GitHub/coin-myself/src/routes/Chart.tsx":"12","/Users/phw/Documents/GitHub/coin-myself/src/routes/Price.tsx":"13"},{"size":573,"mtime":1642497652154,"results":"14","hashOfConfig":"15"},{"size":1641,"mtime":1642494069720,"results":"16","hashOfConfig":"15"},{"size":1816,"mtime":1642489350016,"results":"17","hashOfConfig":"15"},{"size":215,"mtime":1642493798174,"results":"18","hashOfConfig":"15"},{"size":726,"mtime":1643256835021,"results":"19","hashOfConfig":"20"},{"size":156,"mtime":1642738029409,"results":"21","hashOfConfig":"20"},{"size":1852,"mtime":1643262752059,"results":"22","hashOfConfig":"20"},{"size":434,"mtime":1644215587217,"results":"23","hashOfConfig":"20"},{"size":6588,"mtime":1643865177995,"results":"24","hashOfConfig":"20"},{"size":2592,"mtime":1643525339810,"results":"25","hashOfConfig":"20"},{"size":846,"mtime":1643866390580,"results":"26","hashOfConfig":"20"},{"size":1941,"mtime":1643867355610,"results":"27","hashOfConfig":"20"},{"size":2262,"mtime":1643870536033,"results":"28","hashOfConfig":"20"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},"17qsvdy",{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1sefwe4",{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/phw/study/nomadcoder/typescript/src/index.tsx",["60"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ThemeProvider } from 'styled-components';\nimport App from './App';\nimport { darkTheme, lightTheme } from './theme';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={darkTheme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n","/Users/phw/study/nomadcoder/typescript/src/App.tsx",[],["61","62"],"/Users/phw/study/nomadcoder/typescript/src/Circle.tsx",["63"],"/Users/phw/study/nomadcoder/typescript/src/theme.ts",[],"/Users/phw/Documents/GitHub/coin-myself/src/index.tsx",[],"/Users/phw/Documents/GitHub/coin-myself/src/theme.ts",[],"/Users/phw/Documents/GitHub/coin-myself/src/App.tsx",["64","65"],"import React from \"react\";\nimport { useState } from \"react\";\nimport styled, { createGlobalStyle } from \"styled-components\"\nimport Router from \"./routes/Router\";\nimport {ReactQueryDevtools} from \"react-query/devtools\"\n\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\nbody {\n  line-height: 1;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n* {\n  box-sizing: border-box;\n}\nbody {\n  font-family: 'Source Sans Pro', sans-serif;\n  background-color:${(props) => props.theme.bgColor};\n  color:${(props) => props.theme.textColor}\n}\na {\n  text-decoration:none;\n}\n`;\n\nconst App = () =>{\n  return(\n    <>\n      <GlobalStyle />\n      <Router></Router>\n      <ReactQueryDevtools initialIsOpen={true}/>\n    </> \n  )\n}\nexport default App;\n","/Users/phw/Documents/GitHub/coin-myself/src/routes/Router.tsx",[],"/Users/phw/Documents/GitHub/coin-myself/src/routes/Coin.tsx",["66","67"],"import { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { useQuery } from \"react-query\";\nimport { Switch, Route, useLocation, useParams, Link, useRouteMatch } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { fetchCoinInfo, fetchCoinTickers } from \"./api\";\nimport Chart from \"./Chart\";\nimport Price from \"./Price\";\n\nconst Container = styled.div`\n  max-width: 480px;\n  margin: 0 auto;\n  padding: 10px;\n`;\nconst Loader = styled.span`\n  display: block;\n  text-align: center;\n`;\n\nconst Header = styled.header`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 15vh;\n`;\nconst Title = styled.h1`\n  font-size: 2.5em;\n`;\nconst List = styled.div`\n  text-align: right;\n  margin: 10px auto;\n  a{\n    color: ${(props) => props.theme.textColor};\n    &:hover{\n        color: ${(props) => props.theme.accentColor};\n      }\n  }\n`;\nconst View = styled.div`\n  border: solid 3px white;\n  border-radius: 15px;\n  background-color: #111;\n`;\nconst ViewItem = styled.ul`\n  margin: 10px auto;\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n`;\nconst ViewText = styled.li`\n  text-align: center;\n`;\nconst ViewP = styled.p`\n  margin-top: 10px;\n  font-size: 1.5em;\n`;\nconst Description = styled.div`\n  margin: 15px auto;\n  padding: 0 10px;\n  line-height: 30px;\n`;\nconst Tabs = styled.div`\n  margin-top: 20px;\n  direction: none;\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n  gap: 15px;\n`;\nconst Tab = styled.span<{ isActive: boolean}>`\n    border: solid 3px #fff;\n    background-color: #111;\n    border-radius: 15px;\n    width: 100%;\n    text-align: center;\n    display: inline-block;\n    color: ${(props) => props.theme.textColor};\n    font-size: 1.25rem;\n    line-height: 30px;\n    margin-bottom: 20px;\n    a{\n      display: block;\n      color: ${(props) =>\n    props.isActive ? props.theme.accentColor : props.theme.textColor};\n      &:hover{\n        color: ${(props) => props.theme.accentColor};\n      }\n    }\n`;\ninterface RouteParams {\n  coinId: string;\n}\ninterface RouteState {\n  name: string;\n}\n\ninterface InfoData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  is_new: boolean;\n  is_active: boolean;\n  type: string;\n  description: string;\n  message: string;\n  open_source: boolean;\n  started_at: string;\n  development_status: string;\n  hardware_wallet: boolean;\n  proof_type: string;\n  org_structure: string;\n  hash_algorithm: string;\n  first_data_at: string;\n  last_data_at: string;\n}\n\ninterface PriceInfo {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  circulating_supply: number;\n  total_supply: number;\n  max_supply: number;\n  beta_value: number;\n  first_data_at: string;\n  last_updated: string;\n  quotes: {\n    USD: {\n      ath_date: string;\n      ath_price: number;\n      market_cap: number;\n      market_cap_change_24h: number;\n      percent_change_1h: number;\n      percent_change_1y: number;\n      percent_change_6h: number;\n      percent_change_7d: number;\n      percent_change_12h: number;\n      percent_change_15m: number;\n      percent_change_24h: number;\n      percent_change_30d: number;\n      percent_change_30m: number;\n      percent_from_price_ath: number;\n      price: number;\n      volume_24h: number;\n      volume_24h_change_24h: number;\n    };\n  };\n}\nconst Coin = () => {\n  const { coinId } = useParams<RouteParams>();\n  const { state } = useLocation<RouteState>();\n  const priceMatch = useRouteMatch(\"/:coinId/price\");\n  const chartMatch = useRouteMatch(\"/:coinId/chart\");\n  const {isLoading: infoLoading, data: infoData} = useQuery<InfoData>([\"info\", coinId],\n  () => fetchCoinInfo(coinId));\n  const {isLoading: tickersLoading, data:tickersData} = useQuery<PriceInfo>([\"tickers\", coinId],\n  () => fetchCoinTickers(coinId));\n  // const [loading, setLoading] = useState(true);\n  // const [info, setInfo] = useState<InfoData>();\n  // const [priceInfo, setPriceInfo] = useState<PriceInfo>();\n  // useEffect(() => {\n  //   (async () => {\n  //     const infoData = await (\n  //       await fetch(`https://api.coinpaprika.com/v1/coins/${coinId}`)\n  //     ).json();\n  //     console.log(infoData);\n  //     const priceData = await (\n  //       await fetch(`https://api.coinpaprika.com/v1/tickers/${coinId}`)\n  //     ).json();\n  //     console.log(priceData);\n  //     setInfo(infoData);\n  //     setPriceInfo(priceData);\n  //     setLoading(false);\n  //   })();\n  // }, [coinId]);\n  const loading = infoLoading || tickersLoading ;\n  return (\n    <Container>\n      <Helmet>\n        <title>\n        {state?.name\n            ? state.name\n            : loading\n            ? \"데이터 받아오는 중...\"\n            : infoData?.name}\n        </title>\n      </Helmet>\n      <Header>\n        <Title>\n          {state?.name\n            ? state.name\n            : loading\n            ? \"데이터 받아오는 중...\"\n            : infoData?.name}\n        </Title>\n      </Header>\n        <List>\n        <Link to =\"/\">뒤로가기</Link>\n        </List>\n      {loading ? (\n        <Loader>데이터 받아오는 중...</Loader>\n      ) : (\n        <>\n          <View>\n            <ViewItem>\n              <ViewText>\n                가격 <ViewP>{tickersData?.quotes.USD.price.toFixed(2)}</ViewP>\n              </ViewText>\n              <ViewText>\n                순위 <ViewP>{infoData?.rank}</ViewP>\n              </ViewText>\n              <ViewText>\n                심볼 <ViewP>{infoData?.symbol}</ViewP>\n              </ViewText>\n            </ViewItem>\n          </View>\n          <Description>{infoData?.description}</Description>\n          <View>\n            <ViewItem>\n              <ViewText>\n                첫 시장 가격 <ViewP>{tickersData?.first_data_at}</ViewP>\n              </ViewText>\n              <ViewText>\n                마지막 업데이트 날짜 <ViewP>{tickersData?.last_updated}</ViewP>\n              </ViewText>\n            </ViewItem>\n          </View>\n          <Tabs>\n            <Tab isActive={chartMatch !== null}>\n            <Link to={`/${coinId}/chart`}>차트</Link>\n            </Tab>\n            <Tab isActive={priceMatch !== null}>\n            <Link to={`/${coinId}/price`}>가격</Link>\n            </Tab>\n          </Tabs>\n          <Switch>\n            <Route path={`/${coinId}/price`}>\n              <Price coinId = {coinId}/>\n            </Route>\n            <Route path={`/:coinId/chart`}>\n              <Chart coinId={coinId}/>\n            </Route>\n          </Switch>\n        </>\n      )}\n    </Container>\n  );\n};\nexport default Coin;\n","/Users/phw/Documents/GitHub/coin-myself/src/routes/Coins.tsx",["68","69"],"import { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { useQuery } from \"react-query\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { fetchCoins } from \"./api\";\n\nconst Container = styled.div`\nmax-width:480px;\nmargin: 0 auto;\npadding: 10px;\n`;\nconst Loader = styled.span`\ndisplay: block;\ntext-align: center;\n`;\n\nconst Header = styled.header`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 15vh;\n`;\nconst Title = styled.h1`\n  font-size: 2.5em;\n`;\nconst CoinsList = styled.ul`\n  \n  margin: 0 auto;\n  display: grid;\n  grid-template-columns: 32% 32% 32% ;\n  justify-content: center;\n  align-items: center;\n  grid-gap: 2%;\n  grid-row-gap: 0.5%;\n  \n`;\nconst Coin = styled.li`\n  border: 2px solid ${(props) => props.theme.textColor};\n  border-radius: 10px;\n  text-align: center;\n  display: center;\n  transition: color 2s ease-in;\n  &:hover {\n    background-color: #222;\n    border-color: ${(props) => props.theme.accentColor};\n    \n    a{\n    color: ${(props) => props.theme.accentColor};\n  }\n  }\n  a {\n    display: block;\n    transition: color 0.2s ease-in;\n    color:${(props) => props.theme.textColor};\n  }\n`;\nconst Img =styled.img`\ndisplay:inline-block;\nwidth:3em;\nmargin:2em;\n`;\n\ninterface ICoin {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  is_new: boolean;\n  is_active: boolean;\n  type: string;\n}\n\nconst Coins = () => {\n  const {isLoading, data} = useQuery<ICoin[]>(\"allCoins\", fetchCoins)\n  // const [coins, setCoins] = useState<CoinInterface[]>([]);\n  // const [loading, setLoading] =useState(true);\n  // useEffect(()=>{\n  //   (async()=> {\n  //     const response = await fetch(\"https://api.coinpaprika.com/v1/coins\")\n  //     const json = await response.json();\n  //     setCoins(json.slice(0,100));\n  //     setLoading(false);\n  //   })();\n  // },[])\n  return (\n    <Container>\n      <Helmet>\n        <title>\n        모든코인\n        </title>\n      </Helmet>\n      <Header>\n        <Title>모든 코인</Title>\n      </Header>\n      {isLoading ? <Loader>데이터 받아오는 중...</Loader> : <CoinsList>\n        {data?.slice(0,100).map((coin) => (\n          <Coin key={coin.id}>\n            <Link to={{\n              pathname : `/${coin.id}`,\n              state: { name:coin.name}\n            }}> <Img\n                  src={`https://cryptoicon-api.vercel.app/api/icon/${coin.symbol.toLowerCase()}`}\n                /> </Link>\n          </Coin>\n        ))}\n      </CoinsList>}\n    </Container>\n  );\n};\nexport default Coins;\n","/Users/phw/Documents/GitHub/coin-myself/src/routes/api.ts",[],"/Users/phw/Documents/GitHub/coin-myself/src/routes/Chart.tsx",[],"/Users/phw/Documents/GitHub/coin-myself/src/routes/Price.tsx",[],{"ruleId":"70","severity":1,"message":"71","line":5,"column":21,"nodeType":"72","messageId":"73","endLine":5,"endColumn":31},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"70","severity":1,"message":"78","line":1,"column":10,"nodeType":"72","messageId":"73","endLine":1,"endColumn":18},{"ruleId":"70","severity":1,"message":"78","line":2,"column":10,"nodeType":"72","messageId":"73","endLine":2,"endColumn":18},{"ruleId":"70","severity":1,"message":"79","line":3,"column":8,"nodeType":"72","messageId":"73","endLine":3,"endColumn":14},{"ruleId":"70","severity":1,"message":"80","line":1,"column":10,"nodeType":"72","messageId":"73","endLine":1,"endColumn":19},{"ruleId":"70","severity":1,"message":"78","line":2,"column":10,"nodeType":"72","messageId":"73","endLine":2,"endColumn":18},{"ruleId":"70","severity":1,"message":"80","line":1,"column":10,"nodeType":"72","messageId":"73","endLine":1,"endColumn":19},{"ruleId":"70","severity":1,"message":"78","line":2,"column":10,"nodeType":"72","messageId":"73","endLine":2,"endColumn":18},"@typescript-eslint/no-unused-vars","'lightTheme' is defined but never used.","Identifier","unusedVar","no-native-reassign",["81"],"no-negated-in-lhs",["82"],"'useState' is defined but never used.","'styled' is defined but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation"]