{"ast":null,"code":"var _jsxFileName = \"/Users/phw/study/nomadcoder/coin_myself/src/routes/Chart.tsx\",\n    _s = $RefreshSig$();\n\nimport { useQuery } from \"react-query\";\nimport { fetchCoinHistory } from \"./api\";\nimport ApexChart from \"react-apexcharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Chart = _ref => {\n  _s();\n\n  let {\n    coinId\n  } = _ref;\n  const endDate = Math.floor(Date.now() / 1000);\n  const startDate = endDate - 60 * 60 * 24 * 7 * 2;\n  const {\n    isLoading,\n    data\n  } = useQuery([\"ohlcv\", coinId], () => fetchCoinHistory(coinId));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isLoading ? \"차트 생성중\" : /*#__PURE__*/_jsxDEV(ApexChart, {\n      type: \"candlestick\",\n      options: {\n        chart: {\n          background: \"black\"\n        }\n      },\n      series: [{\n        name: \"Price\",\n        data: data === null || data === void 0 ? void 0 : data.map(price => ({\n          x: price.time_close,\n          y: [price.open, price.high, price.low, price.close]\n        }))\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 30\n    }, this)\n  }, void 0, false);\n};\n\n_s(Chart, \"3/UYpjJNObciauUid8uIQ//UcYY=\", false, function () {\n  return [useQuery];\n});\n\n_c = Chart;\nexport default Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["/Users/phw/study/nomadcoder/coin_myself/src/routes/Chart.tsx"],"names":["useQuery","fetchCoinHistory","ApexChart","Chart","coinId","endDate","Math","floor","Date","now","startDate","isLoading","data","chart","background","name","map","price","x","time_close","y","open","high","low","close"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,aAAzB;AACA,SAASC,gBAAT,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,kBAAtB;;;;AAgBA,MAAMC,KAAK,GAAG,QAA4B;AAAA;;AAAA,MAA3B;AAAEC,IAAAA;AAAF,GAA2B;AACxC,QAAMC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWC,IAAI,CAACC,GAAL,KAAY,IAAvB,CAAhB;AACA,QAAMC,SAAS,GAAGL,OAAO,GAAG,KAAK,EAAL,GAAU,EAAV,GAAe,CAAf,GAAmB,CAA/C;AACA,QAAM;AAAEM,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAAsBZ,QAAQ,CAAW,CAAC,OAAD,EAAUI,MAAV,CAAX,EAA8B,MAChEH,gBAAgB,CAACG,MAAD,CADkB,CAApC;AAGA,sBACE;AAAA,cACEO,SAAS,GAAG,QAAH,gBAAc,QAAC,SAAD;AAAW,MAAA,IAAI,EAAC,aAAhB;AACxB,MAAA,OAAO,EACL;AAACE,QAAAA,KAAK,EAAC;AACLC,UAAAA,UAAU,EAAC;AADN;AAAP,OAFsB;AAMxB,MAAA,MAAM,EAAE,CACP;AACEC,QAAAA,IAAI,EAAE,OADR;AAEEH,QAAAA,IAAI,EAAEA,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEI,GAAN,CAAWC,KAAD,KAAY;AAC1BC,UAAAA,CAAC,EAAED,KAAK,CAACE,UADiB;AAE1BC,UAAAA,CAAC,EAAE,CAACH,KAAK,CAACI,IAAP,EAAaJ,KAAK,CAACK,IAAnB,EAAyBL,KAAK,CAACM,GAA/B,EAAoCN,KAAK,CAACO,KAA1C;AAFuB,SAAZ,CAAV;AAFR,OADO;AANgB;AAAA;AAAA;AAAA;AAAA;AADzB,mBADF;AAqBD,CA3BD;;GAAMrB,K;UAGwBH,Q;;;KAHxBG,K;AA6BN,eAAeA,KAAf","sourcesContent":["import { useQuery } from \"react-query\";\nimport { fetchCoinHistory } from \"./api\";\nimport ApexChart from \"react-apexcharts\";\n\ninterface IHistory {\n  time_open: string;\n  time_close: string;\n  open: number;\n  high: number;\n  low: number;\n  close: number;\n  volume: number;\n  market_cap: number;\n}\ninterface ChartProps {\n  coinId: string;\n}\n\nconst Chart = ({ coinId }: ChartProps) => {\n  const endDate = Math.floor(Date.now()/ 1000);\n  const startDate = endDate - 60 * 60 * 24 * 7 * 2; \n  const { isLoading, data } = useQuery<IHistory>([\"ohlcv\", coinId], () =>\n    fetchCoinHistory(coinId)\n  );\n  return (\n    <>\n     {isLoading ? \"차트 생성중\" : <ApexChart type=\"candlestick\" \n     options={\n       {chart:{\n         background:\"black\",\n       }\n     }}\n     series={[\n      {\n        name: \"Price\",\n        data: data?.map((price) => ({\n          x: price.time_close,\n          y: [price.open, price.high, price.low, price.close],\n        })),\n      },\n    ]}\n    />\n    }\n    </>\n  );\n};\n\nexport default Chart;\n"]},"metadata":{},"sourceType":"module"}