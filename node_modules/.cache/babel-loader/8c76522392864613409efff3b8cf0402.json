{"ast":null,"code":"var _jsxFileName = \"/Users/phw/study/nomadcoder/coin_myself/src/routes/Chart.tsx\",\n    _s = $RefreshSig$();\n\nimport { useQuery } from \"react-query\";\nimport { fetchCoinHistory } from \"./api\";\nimport ApexChart from \"react-apexcharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Chart = _ref => {\n  _s();\n\n  let {\n    coinId\n  } = _ref;\n  const {\n    isLoading,\n    data\n  } = useQuery([\"ohlcv\", coinId], () => fetchCoinHistory(coinId));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", isLoading ? \"Loading chart...\" : /*#__PURE__*/_jsxDEV(ApexChart, {\n        type: \"line\",\n        series: [{\n          name: \"Price\",\n          data: data === null || data === void 0 ? void 0 : data.map(price => price.close)\n        }],\n        options: {\n          theme: {\n            mode: \"dark\"\n          },\n          chart: {\n            height: 300,\n            width: 500,\n            toolbar: {\n              show: false\n            },\n            background: \"transparent\"\n          },\n          grid: {\n            show: false\n          },\n          stroke: {\n            curve: \"smooth\",\n            width: 4\n          },\n          yaxis: {\n            show: false\n          },\n          xaxis: {\n            axisBorder: {\n              show: false\n            },\n            axisTicks: {\n              show: false\n            },\n            labels: {\n              show: false\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Chart, \"3/UYpjJNObciauUid8uIQ//UcYY=\", false, function () {\n  return [useQuery];\n});\n\n_c = Chart;\nexport default Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["/Users/phw/study/nomadcoder/coin_myself/src/routes/Chart.tsx"],"names":["useQuery","fetchCoinHistory","ApexChart","Chart","coinId","isLoading","data","name","map","price","close","theme","mode","chart","height","width","toolbar","show","background","grid","stroke","curve","yaxis","xaxis","axisBorder","axisTicks","labels"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,aAAzB;AACA,SAASC,gBAAT,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,kBAAtB;;;;AAgBA,MAAMC,KAAK,GAAG,QAA4B;AAAA;;AAAA,MAA3B;AAAEC,IAAAA;AAAF,GAA2B;AACxC,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAAsBN,QAAQ,CAAW,CAAC,OAAD,EAAUI,MAAV,CAAX,EAA8B,MAChEH,gBAAgB,CAACG,MAAD,CADkB,CAApC;AAGA,sBACE;AAAA,2BACE;AAAA,sBAAOC,SAAS,GACd,kBADc,gBAGd,QAAC,SAAD;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,MAAM,EAAE,CACN;AACEE,UAAAA,IAAI,EAAE,OADR;AAEED,UAAAA,IAAI,EAAEA,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEE,GAAN,CAAWC,KAAD,IAAWA,KAAK,CAACC,KAA3B;AAFR,SADM,CAFV;AAQE,QAAA,OAAO,EAAE;AACPC,UAAAA,KAAK,EAAE;AACLC,YAAAA,IAAI,EAAE;AADD,WADA;AAIPC,UAAAA,KAAK,EAAE;AACLC,YAAAA,MAAM,EAAE,GADH;AAELC,YAAAA,KAAK,EAAE,GAFF;AAGLC,YAAAA,OAAO,EAAE;AACPC,cAAAA,IAAI,EAAE;AADC,aAHJ;AAMLC,YAAAA,UAAU,EAAE;AANP,WAJA;AAYPC,UAAAA,IAAI,EAAE;AAAEF,YAAAA,IAAI,EAAE;AAAR,WAZC;AAaPG,UAAAA,MAAM,EAAE;AACNC,YAAAA,KAAK,EAAE,QADD;AAENN,YAAAA,KAAK,EAAE;AAFD,WAbD;AAiBPO,UAAAA,KAAK,EAAE;AACLL,YAAAA,IAAI,EAAE;AADD,WAjBA;AAoBPM,UAAAA,KAAK,EAAE;AACLC,YAAAA,UAAU,EAAE;AAAEP,cAAAA,IAAI,EAAE;AAAR,aADP;AAELQ,YAAAA,SAAS,EAAE;AAAER,cAAAA,IAAI,EAAE;AAAR,aAFN;AAGLS,YAAAA,MAAM,EAAE;AAAET,cAAAA,IAAI,EAAE;AAAR;AAHH;AApBA;AARX;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AA4CD,CAhDD;;GAAMd,K;UACwBH,Q;;;KADxBG,K;AAkDN,eAAeA,KAAf","sourcesContent":["import { useQuery } from \"react-query\";\nimport { fetchCoinHistory } from \"./api\";\nimport ApexChart from \"react-apexcharts\";\n\ninterface IHistory {\n  time_open: string;\n  time_close: string;\n  open: number;\n  high: number;\n  low: number;\n  close: number;\n  volume: number;\n  market_cap: number;\n}\ninterface ChartProps {\n  coinId: string;\n}\n\nconst Chart = ({ coinId }: ChartProps) => {\n  const { isLoading, data } = useQuery<IHistory>([\"ohlcv\", coinId], () =>\n    fetchCoinHistory(coinId)\n  );\n  return (\n    <>\n      <div> {isLoading ? (\n        \"Loading chart...\"\n      ) : (\n        <ApexChart\n          type=\"line\"\n          series={[\n            {\n              name: \"Price\",\n              data: data?.map((price) => price.close),\n            },\n          ]}\n          options={{\n            theme: {\n              mode: \"dark\",\n            },\n            chart: {\n              height: 300,\n              width: 500,\n              toolbar: {\n                show: false,\n              },\n              background: \"transparent\",\n            },\n            grid: { show: false },\n            stroke: {\n              curve: \"smooth\",\n              width: 4,\n            },\n            yaxis: {\n              show: false,\n            },\n            xaxis: {\n              axisBorder: { show: false },\n              axisTicks: { show: false },\n              labels: { show: false },\n            },\n          }}\n        />\n      )}\n      </div>\n    </>\n  );\n};\n\nexport default Chart;\n"]},"metadata":{},"sourceType":"module"}