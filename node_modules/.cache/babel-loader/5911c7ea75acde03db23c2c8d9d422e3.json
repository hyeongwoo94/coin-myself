{"ast":null,"code":"var _jsxFileName = \"/Users/phw/study/nomadcoder/typescript/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Father = styled.div`\nbackground-color: ${props => props.theme.bgColor};\n`;\n_c = Father;\nconst Font = styled.h1`\ncolor: ${props => props.theme.textColor}\n`;\n_c2 = Font;\n\nconst App = () => {\n  _s();\n\n  const [value, setValue] = useState(\"\"); //value는 username이다.\n\n  const onChange = event => {\n    const {\n      currentTarget: {\n        value\n      }\n    } = event;\n    setValue(value);\n  }; //위에와는 다른 새로운 함수이다.\n  //event는 아래 input의 이벤트임으로 event자체가 변수라고 생각하고 그것을 React형식의 event로 변경후\n  //어떤 Element가 이벤트을 발생시키지 지정해주는 것이<HTMLInputElement>이다.\n  //결과적으로 inputElement가 onchange함수를 실행시킨다는 것이다.\n  //마지막으로 해당 event에 무엇이 들어가는지 설명을 해주는 것이다.\n\n\n  const onSubmit = event => {\n    event.preventDefault();\n    console.log(\"hi\", value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: value,\n        onChange: onChange,\n        type: \"text\",\n        placeholder: \"username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"\\uB85C\\uADF8\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Father, {\n        children: /*#__PURE__*/_jsxDEV(Font, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(App, \"WHwJV1oCj9Db/p/UQjU4Iu9CdI4=\");\n\n_c3 = App;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Father\");\n$RefreshReg$(_c2, \"Font\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"sources":["/Users/phw/study/nomadcoder/typescript/src/App.tsx"],"names":["React","useState","styled","Father","div","props","theme","bgColor","Font","h1","textColor","App","value","setValue","onChange","event","currentTarget","onSubmit","preventDefault","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;;AAEA,MAAMC,MAAM,GAAGD,MAAM,CAACE,GAAI;AAC1B,oBAAqBC,KAAD,IAAWA,KAAK,CAACC,KAAN,CAAYC,OAAQ;AACnD,CAFA;KAAMJ,M;AAGN,MAAMK,IAAI,GAAGN,MAAM,CAACO,EAAG;AACvB,SAAUJ,KAAD,IAAWA,KAAK,CAACC,KAAN,CAAYI,SAAU;AAC1C,CAFA;MAAMF,I;;AAIN,MAAMG,GAAG,GAAG,MAAK;AAAA;;AACf,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBZ,QAAQ,CAAC,EAAD,CAAjC,CADe,CAEf;;AACA,QAAMa,QAAQ,GAAIC,KAAD,IAA8C;AAC7D,UAAK;AAACC,MAAAA,aAAa,EAAE;AAACJ,QAAAA;AAAD;AAAhB,QAA2BG,KAAhC;AACAF,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,GAHD,CAHe,CAOf;AACA;AACA;AACA;AACA;;;AAEA,QAAMK,QAAQ,GAAIF,KAAD,IAA4C;AAC3DA,IAAAA,KAAK,CAACG,cAAN;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAkBR,KAAlB;AACD,GAHD;;AAIA,sBACE;AAAA,2BACE;AAAM,MAAA,QAAQ,EAAEK,QAAhB;AAAA,8BACE;AAAO,QAAA,KAAK,EAAEL,KAAd;AAAqB,QAAA,QAAQ,EAAEE,QAA/B;AAAyC,QAAA,IAAI,EAAC,MAA9C;AAAqD,QAAA,WAAW,EAAG;AAAnE;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAA;AAAA;AAAA;AAAA,cALF,eAME;AAAA;AAAA;AAAA;AAAA,cANF,eAOE;AAAA;AAAA;AAAA;AAAA,cAPF,eAQE,QAAC,MAAD;AAAA,+BACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAgBD,CAjCD;;GAAMH,G;;MAAAA,G;AAkCN,eAAeA,GAAf","sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\nimport styled from \"styled-components\"\n\nconst Father = styled.div`\nbackground-color: ${(props) => props.theme.bgColor};\n`;\nconst Font = styled.h1`\ncolor: ${(props) => props.theme.textColor}\n`;\n\nconst App = () =>{\n  const [value,setValue] = useState(\"\")\n  //value는 username이다.\n  const onChange = (event: React.FormEvent<HTMLInputElement>) => {\n    const{currentTarget: {value}} = event;\n    setValue(value);\n  };\n  //위에와는 다른 새로운 함수이다.\n  //event는 아래 input의 이벤트임으로 event자체가 변수라고 생각하고 그것을 React형식의 event로 변경후\n  //어떤 Element가 이벤트을 발생시키지 지정해주는 것이<HTMLInputElement>이다.\n  //결과적으로 inputElement가 onchange함수를 실행시킨다는 것이다.\n  //마지막으로 해당 event에 무엇이 들어가는지 설명을 해주는 것이다.\n  \n  const onSubmit = (event:React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    console.log(\"hi\", value)\n  }\n  return(\n    <>\n      <form onSubmit={onSubmit}>\n        <input value={value} onChange={onChange} type=\"text\" placeholder = \"username\" />\n        {/* //input의 value값의 useState의 value 값으로 들어간다. */}\n        {/* 여기서 onChange는 input의 이벤트속성이고 그것이 행해질때 위의 onChange 함수를 사용하다는 것이다 */}\n        <button>로그인</button>\n        <div></div>\n        <div></div>\n        <div></div>\n        <Father>\n          <Font></Font>\n        </Father>\n      </form>\n    </> \n  )\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}