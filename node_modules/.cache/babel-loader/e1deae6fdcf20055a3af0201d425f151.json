{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/phw/Documents/GitHub/coin-myself/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject;import{useQuery}from\"react-query\";import{fetchCoinHistory}from\"./api\";import ApexChart from\"react-apexcharts\";import styled from\"styled-components\";import{jsx as _jsx}from\"react/jsx-runtime\";var LoadingText=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\ntext-align:center;\\nfont-size: 2rem;\\n\"])));var Chart=function Chart(_ref){var coinId=_ref.coinId;var _useQuery=useQuery([\"ohlcv\",coinId],function(){return fetchCoinHistory(coinId);},{refetchInterval:1000}),isLoading=_useQuery.isLoading,data=_useQuery.data;return/*#__PURE__*/_jsx(\"div\",{children:isLoading?/*#__PURE__*/_jsx(LoadingText,{children:\"\\uCC28\\uD2B8 \\uC0DD\\uC131\\uC911\"}):/*#__PURE__*/_jsx(ApexChart,{type:\"candlestick\",series:[{name:\"Price\",data:data===null||data===void 0?void 0:data.map(function(price){return{x:price.time_close,y:[price.open.toFixed(2),price.high.toFixed(2),price.low.toFixed(2),price.close.toFixed(2)]};})}],options:{theme:{mode:\"dark\"},chart:{type:\"candlestick\",height:900,background:\"transparent\",foreColor:\"white\",animations:{enabled:true,easing:\"easeinout\",speed:800,animateGradually:{enabled:true,delay:150},dynamicAnimation:{enabled:true,speed:350}}},xaxis:{type:\"datetime\"},yaxis:{show:false}}})});};export default Chart;","map":{"version":3,"sources":["/Users/phw/Documents/GitHub/coin-myself/src/routes/Chart.tsx"],"names":["useQuery","fetchCoinHistory","ApexChart","styled","LoadingText","div","Chart","coinId","refetchInterval","isLoading","data","name","map","price","x","time_close","y","open","toFixed","high","low","close","theme","mode","chart","type","height","background","foreColor","animations","enabled","easing","speed","animateGradually","delay","dynamicAnimation","xaxis","yaxis","show"],"mappings":"iKAAA,OAASA,QAAT,KAAyB,aAAzB,CACA,OAASC,gBAAT,KAAiC,OAAjC,CACA,MAAOC,CAAAA,SAAP,KAAsB,kBAAtB,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,C,2CAEA,GAAMC,CAAAA,WAAW,CAAGD,MAAM,CAACE,GAAV,yGAAjB,CAmBA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,MAA4B,IAAzBC,CAAAA,MAAyB,MAAzBA,MAAyB,CACxC,cAA4BP,QAAQ,CAAa,CAAC,OAAD,CAAUO,MAAV,CAAb,CAAgC,iBAClEN,CAAAA,gBAAgB,CAACM,MAAD,CADkD,EAAhC,CACT,CACvBC,eAAe,CAAE,IADM,CADS,CAApC,CAAQC,SAAR,WAAQA,SAAR,CAAmBC,IAAnB,WAAmBA,IAAnB,CAKA,mBACE,qBACGD,SAAS,cACR,KAAC,WAAD,8CADQ,cAGR,KAAC,SAAD,EACE,IAAI,CAAC,aADP,CAEE,MAAM,CAAE,CACN,CACEE,IAAI,CAAE,OADR,CAEED,IAAI,CAAEA,IAAF,SAAEA,IAAF,iBAAEA,IAAI,CAAEE,GAAN,CAAU,SAACC,KAAD,QAAY,CAC1BC,CAAC,CAAED,KAAK,CAACE,UADiB,CAE1BC,CAAC,CAAE,CAACH,KAAK,CAACI,IAAN,CAAWC,OAAX,CAAmB,CAAnB,CAAD,CAAwBL,KAAK,CAACM,IAAN,CAAWD,OAAX,CAAmB,CAAnB,CAAxB,CAA+CL,KAAK,CAACO,GAAN,CAAUF,OAAV,CAAkB,CAAlB,CAA/C,CAAqEL,KAAK,CAACQ,KAAN,CAAYH,OAAZ,CAAoB,CAApB,CAArE,CAFuB,CAAZ,EAAV,CAFR,CADM,CAFV,CAWE,OAAO,CAAE,CACPI,KAAK,CAAE,CACLC,IAAI,CAAE,MADD,CADA,CAIPC,KAAK,CAAE,CACLC,IAAI,CAAE,aADD,CAELC,MAAM,CAAE,GAFH,CAGLC,UAAU,CAAE,aAHP,CAILC,SAAS,CAAE,OAJN,CAKLC,UAAU,CAAE,CACVC,OAAO,CAAE,IADC,CAEVC,MAAM,CAAE,WAFE,CAGVC,KAAK,CAAE,GAHG,CAIVC,gBAAgB,CAAE,CAChBH,OAAO,CAAE,IADO,CAEhBI,KAAK,CAAE,GAFS,CAJR,CAQVC,gBAAgB,CAAE,CAChBL,OAAO,CAAE,IADO,CAEhBE,KAAK,CAAE,GAFS,CARR,CALP,CAJA,CAuBPI,KAAK,CAAE,CACLX,IAAI,CAAE,UADD,CAvBA,CA0BPY,KAAK,CAAE,CACLC,IAAI,CAAE,KADD,CA1BA,CAXX,EAJJ,EADF,CAkDD,CAxDD,CA0DA,cAAehC,CAAAA,KAAf","sourcesContent":["import { useQuery } from \"react-query\";\nimport { fetchCoinHistory } from \"./api\";\nimport ApexChart from \"react-apexcharts\";\nimport styled from \"styled-components\";\n\nconst LoadingText = styled.div`\ntext-align:center;\nfont-size: 2rem;\n`;\n\ninterface IHistory {\n  time_open: string;\n  time_close: string;\n  open: number;\n  high: number;\n  low: number;\n  close: number;\n  volume: number;\n  market_cap: number;\n}\ninterface ChartProps {\n  coinId: string;\n}\n\nconst Chart = ({ coinId }: ChartProps) => {\n  const { isLoading, data } = useQuery<IHistory[]>([\"ohlcv\", coinId], () =>\n    fetchCoinHistory(coinId),{\n      refetchInterval: 1000,\n    }\n  );\n  return (\n    <div>\n      {isLoading ? (\n        <LoadingText>차트 생성중</LoadingText>\n      ) : (\n        <ApexChart\n          type=\"candlestick\"\n          series={[\n            {\n              name: \"Price\",\n              data: data?.map((price) => ({\n                x: price.time_close,\n                y: [price.open.toFixed(2), price.high.toFixed(2), price.low.toFixed(2), price.close.toFixed(2)],\n              })),\n            },\n          ]}\n          options={{\n            theme: {\n              mode: \"dark\"\n            },\n            chart: {\n              type: \"candlestick\",\n              height: 900,\n              background: \"transparent\",\n              foreColor: \"white\" ,\n              animations: {\n                enabled: true,\n                easing: \"easeinout\",\n                speed: 800,\n                animateGradually: {\n                  enabled: true,\n                  delay: 150,\n                },\n                dynamicAnimation: {\n                  enabled: true,\n                  speed: 350,\n                },\n              },\n            },\n            xaxis: {\n              type: \"datetime\",\n            },\n            yaxis: {\n              show: false,\n            },\n          }}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Chart;\n"]},"metadata":{},"sourceType":"module"}