{"ast":null,"code":"var _jsxFileName = \"/Users/phw/study/nomadcoder/coin_myself/src/routes/Chart.tsx\",\n    _s = $RefreshSig$();\n\nimport { useQuery } from \"react-query\";\nimport { fetchCoinHistory } from \"./api\";\nimport ApexChart from \"react-apexcharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Chart = _ref => {\n  _s();\n\n  let {\n    coinId\n  } = _ref;\n  const {\n    isLoading,\n    data\n  } = useQuery([\"ohlcv\", coinId], () => fetchCoinHistory(coinId), {\n    refetchInterval: 1000\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isLoading ? \"차트 생성중\" : /*#__PURE__*/_jsxDEV(ApexChart, {\n      type: \"candlestick\",\n      series: [{\n        name: \"Price\",\n        data: data === null || data === void 0 ? void 0 : data.map(price => ({\n          x: price.time_close,\n          y: [price.open.toFixed(2), price.high.toFixed(2), price.low.toFixed(2), price.close.toFixed(2)]\n        }))\n      }],\n      options: {\n        theme: {\n          mode: \"dark\"\n        },\n        chart: {\n          type: \"candlestick\",\n          height: 900,\n          background: \"transparent\",\n          foreColor: \"white\",\n          animations: {\n            enabled: true,\n            easing: \"easeinout\",\n            speed: 800,\n            animateGradually: {\n              enabled: true,\n              delay: 150\n            },\n            dynamicAnimation: {\n              enabled: true,\n              speed: 350\n            }\n          }\n        },\n        xaxis: {\n          type: \"datetime\"\n        },\n        yaxis: {\n          show: false\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Chart, \"3/UYpjJNObciauUid8uIQ//UcYY=\", false, function () {\n  return [useQuery];\n});\n\n_c = Chart;\nexport default Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["/Users/phw/study/nomadcoder/coin_myself/src/routes/Chart.tsx"],"names":["useQuery","fetchCoinHistory","ApexChart","Chart","coinId","isLoading","data","refetchInterval","name","map","price","x","time_close","y","open","toFixed","high","low","close","theme","mode","chart","type","height","background","foreColor","animations","enabled","easing","speed","animateGradually","delay","dynamicAnimation","xaxis","yaxis","show"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,aAAzB;AACA,SAASC,gBAAT,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,kBAAtB;;;AAgBA,MAAMC,KAAK,GAAG,QAA4B;AAAA;;AAAA,MAA3B;AAAEC,IAAAA;AAAF,GAA2B;AACxC,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAAsBN,QAAQ,CAAa,CAAC,OAAD,EAAUI,MAAV,CAAb,EAAgC,MAClEH,gBAAgB,CAACG,MAAD,CADkB,EACT;AACvBG,IAAAA,eAAe,EAAE;AADM,GADS,CAApC;AAKA,sBACE;AAAA,cACGF,SAAS,GACR,QADQ,gBAGR,QAAC,SAAD;AACE,MAAA,IAAI,EAAC,aADP;AAEE,MAAA,MAAM,EAAE,CACN;AACEG,QAAAA,IAAI,EAAE,OADR;AAEEF,QAAAA,IAAI,EAAEA,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEG,GAAN,CAAWC,KAAD,KAAY;AAC1BC,UAAAA,CAAC,EAAED,KAAK,CAACE,UADiB;AAE1BC,UAAAA,CAAC,EAAE,CAACH,KAAK,CAACI,IAAN,CAAWC,OAAX,CAAmB,CAAnB,CAAD,EAAwBL,KAAK,CAACM,IAAN,CAAWD,OAAX,CAAmB,CAAnB,CAAxB,EAA+CL,KAAK,CAACO,GAAN,CAAUF,OAAV,CAAkB,CAAlB,CAA/C,EAAqEL,KAAK,CAACQ,KAAN,CAAYH,OAAZ,CAAoB,CAApB,CAArE;AAFuB,SAAZ,CAAV;AAFR,OADM,CAFV;AAWE,MAAA,OAAO,EAAE;AACPI,QAAAA,KAAK,EAAE;AACLC,UAAAA,IAAI,EAAE;AADD,SADA;AAIPC,QAAAA,KAAK,EAAE;AACLC,UAAAA,IAAI,EAAE,aADD;AAELC,UAAAA,MAAM,EAAE,GAFH;AAGLC,UAAAA,UAAU,EAAE,aAHP;AAILC,UAAAA,SAAS,EAAE,OAJN;AAKLC,UAAAA,UAAU,EAAE;AACVC,YAAAA,OAAO,EAAE,IADC;AAEVC,YAAAA,MAAM,EAAE,WAFE;AAGVC,YAAAA,KAAK,EAAE,GAHG;AAIVC,YAAAA,gBAAgB,EAAE;AAChBH,cAAAA,OAAO,EAAE,IADO;AAEhBI,cAAAA,KAAK,EAAE;AAFS,aAJR;AAQVC,YAAAA,gBAAgB,EAAE;AAChBL,cAAAA,OAAO,EAAE,IADO;AAEhBE,cAAAA,KAAK,EAAE;AAFS;AARR;AALP,SAJA;AAuBPI,QAAAA,KAAK,EAAE;AACLX,UAAAA,IAAI,EAAE;AADD,SAvBA;AA0BPY,QAAAA,KAAK,EAAE;AACLC,UAAAA,IAAI,EAAE;AADD;AA1BA;AAXX;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,UADF;AAkDD,CAxDD;;GAAMhC,K;UACwBH,Q;;;KADxBG,K;AA0DN,eAAeA,KAAf","sourcesContent":["import { useQuery } from \"react-query\";\nimport { fetchCoinHistory } from \"./api\";\nimport ApexChart from \"react-apexcharts\";\n\ninterface IHistory {\n  time_open: string;\n  time_close: string;\n  open: number;\n  high: number;\n  low: number;\n  close: number;\n  volume: number;\n  market_cap: number;\n}\ninterface ChartProps {\n  coinId: string;\n}\n\nconst Chart = ({ coinId }: ChartProps) => {\n  const { isLoading, data } = useQuery<IHistory[]>([\"ohlcv\", coinId], () =>\n    fetchCoinHistory(coinId),{\n      refetchInterval: 1000,\n    }\n  );\n  return (\n    <div>\n      {isLoading ? (\n        \"차트 생성중\"\n      ) : (\n        <ApexChart\n          type=\"candlestick\"\n          series={[\n            {\n              name: \"Price\",\n              data: data?.map((price) => ({\n                x: price.time_close,\n                y: [price.open.toFixed(2), price.high.toFixed(2), price.low.toFixed(2), price.close.toFixed(2)],\n              })),\n            },\n          ]}\n          options={{\n            theme: {\n              mode: \"dark\"\n            },\n            chart: {\n              type: \"candlestick\",\n              height: 900,\n              background: \"transparent\",\n              foreColor: \"white\" ,\n              animations: {\n                enabled: true,\n                easing: \"easeinout\",\n                speed: 800,\n                animateGradually: {\n                  enabled: true,\n                  delay: 150,\n                },\n                dynamicAnimation: {\n                  enabled: true,\n                  speed: 350,\n                },\n              },\n            },\n            xaxis: {\n              type: \"datetime\",\n            },\n            yaxis: {\n              show: false,\n            },\n          }}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Chart;\n"]},"metadata":{},"sourceType":"module"}